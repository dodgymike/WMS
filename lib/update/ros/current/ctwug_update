:local softid [/system license get software-id]
:local name [/system identity get name]
:local ver %ver%
:local upgrade 0
:local rscript "ctwug_update.rsc"

/file
:foreach n in=[find where name~"^ctwug_.*\\.rsc"] do={
  :log info ("ctwug_update: removing file " . [get $n name])
  remove $n
}

# This scheduler gets created at the end of an upgrade, to signal a successful upgrade
/system scheduler
:foreach n in=[find where name="ctwug_update_temp"] do={
  :set upgrade 1
  :log info ("ctwug_update: removing scheduler " . [get $n name])
  remove $n
}

# Build query string
:local query ("softid=".$softid."&ver=".$ver."&name=".$name)

# If hardware is a RouterBOARD, get extra info
:if ([/system routerboard get routerboard]) do={
  :local serial [/system routerboard get serial-number]
  :set query ("serial=".$serial."&".$query)
}

# Developer override
/system script environment
:foreach n in=[find where name="ctwugcurver"] do={
  :local curver [get $n value]
  :set query ($query."&curver=".$curver)
}

# Were we just upgraded?
:if ($upgrade = 1) do={
  :set query ($query."&upgrade=1")
}

# URL escape query
:local path "api/update?"
:local fchar
:for i from=0 to=( [:len $query] - 1) do={
  :set fchar [:pick $query $i]
  :if ($fchar = " ") do={
    :set fchar "%20"
  }
  :set path ($path.$fchar)
}

/tool fetch address=wms.ctwug.za.net host=wms.ctwug.za.net src-path=$path dst-path=$rscript mode=http
:delay 3
:local temp [/file get $rscript size]
:if ( $temp > 2) do={
  /import $rscript
}
