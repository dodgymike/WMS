:local rosver [:pick [/system resource get version] 0]

# Make sure 172.18.1.1 is the first DNS server in /ip dns
:local found 0
/ip dns
:foreach server in [get servers] do={
  :if ($server = "172.18.1.1") do={ :set found 1 }
}
:if ($found = 0) do={
  :log info "ctwug_global_settings: adding 172.18.1.1 to DNS servers"
  :local dnsser ("172.18.1.1",[get servers])
  set servers=$dnsser
}

# Remove static DNS entries from NOC migration
/ip dns static
:foreach n in [find where address=172.18.1.10] do={
  :local name [get $n name]
  :if ($name = "noc.ctwug.za.net") do={ remove $n; }
  :if ($name = "web.ctwug.za.net") do={ remove $n; }
}

# Setup the clock
/system clock
:if ([get time-zone-name] != "Africa/Johannesburg") do={
  :log info "ctwug_global_settings: setting time zone to Africa/Johannesburg"
  set time-zone-name=Africa/Johannesburg
}
:local found 1
/system ntp client
:if (![get enabled]) do={ :set found 0 }
:if ([get mode] != "unicast") do={ :set found 0 }
:if ([get primary-ntp] != 172.18.1.1) do={ :set found 0 }
:if ($found = 0) do={
  :log info "ctwug_global_settings: enabling unicast NTP client"
  set enabled=yes mode=unicast primary-ntp=172.18.1.1
}

# Essential schedules to keep everything working!
/system scheduler
:if ([:len [find name="ctwug_update"]] = 0) do={
  :log info "ctwug_global_settings: adding ctwug_update to scheduler"
  add name="ctwug_update" interval=1h on-event="/system script run ctwug_update"
}
:if ([:len [find name="ctwug_gametime"]] = 0) do={
  :log info "ctwug_global_settings: adding ctwug_gametime to scheduler"
  add name="ctwug_gametime" start-time=0:0:0 interval=20m on-event="/system script run ctwug_gametime"
}

# Misc settings
/snmp
:if (![get enabled]) do={
  :log info "ctwug_global_settings: enabling SNMP"
  set enabled=yes
}
/ip firewall connection tracking
:local test
:if ($rosver = "6") do={
  :set test "auto"
} else={
  :set test yes
}
:if ([get enabled] != $test) do={
  :log info "ctwug_global_settings: enabling firewall's connection tracking"
  set enabled=$test
}
/ip traffic-flow
:if ([get enabled] = "yes") do={
  :log info "ctwug_global_settings: disabling netflows"
  set enabled=no
}

# Configure CTWUG radius AAA
/radius
:local rserver 172.18.55.25
:local rsecret "CTwug!!"
:local rtimeout 1s
:set found 0
:foreach n in [find where service="login"] do={
  :if ($found = 1) do={
    :log info ("ctwug_global_settings: removing radius server " . [get $n address])
    remove $n
  }
  :if ($found = 0) do={
    :set found 1
    :if ([get $n address] != $rserver) do={ :set found 0 }
    :if ([get $n secret] != $rsecret) do={ :set found 0 }
    :if ([get $n timeout] != $rtimeout) do={ :set found 0 }
    :if ([get $n comment] != "CTWUG") do={ :set found 0 }
  }
  :if ($found = 0) do={
    :log info "ctwug_global_settings: updating radius login server"
    :set found 1
    set $n comment="CTWUG" address=$rserver secret=$rsecret timeout=$rtimeout
  }
}
:if ($found = 0) do={
  :log info "ctwug_global_settings: adding radius login server"
  add service=login address=$rserver secret=$rsecret timeout=$rtimeout comment="CTWUG"
}
:set found 1
/user aaa
:if (![get use-radius]) do={ :set found 0 }
:if (![get accounting]) do={ :set found 0 }
:if ($found = 0) do={
  :log info "ctwug_global_settings: enabling radius AAA"
  set use-radius=yes accounting=yes
}

# Add/check ctwug read-only account+group
:set found 0
/user group
:foreach n in [find where name="ctwug"] do={
  :local poln 0
  :local policy [get $n policy]
  :for i from=0 to=([:len $policy]-1) do={
    :local pflag [:pick $policy $i]
    :if ($pflag = "local") do={ :set poln ($poln+1) }
    :if ($pflag = "telnet") do={ :set poln ($poln+2) }
    :if ($pflag = "ssh") do={ :set poln ($poln+4) }
    :if ($pflag = "ftp") do={ :set poln ($poln+8) }
    :if ($pflag = "reboot") do={ :set poln ($poln+16) }
    :if ($pflag = "read") do={ :set poln ($poln+32) }
    :if ($pflag = "write") do={ :set poln ($poln+64) }
    :if ($pflag = "policy") do={ :set poln ($poln+128) }
    :if ($pflag = "test") do={ :set poln ($poln+256) }
    :if ($pflag = "winbox") do={ :set poln ($poln+512) }
    :if ($pflag = "password") do={ :set poln ($poln+1024) }
    :if ($pflag = "web") do={ :set poln ($poln+2048) }
    :if ($pflag = "sniff") do={ :set poln ($poln+4096) }
    :if ($pflag = "sensitive") do={ :set poln ($poln+8192) }
    :if ($pflag = "api") do={ :set poln ($poln+16384) }
  }
  :if ($poln != 19255) do={
    :log info "ctwug_global_settings: setting policy on ctwug group"
    set $n policy=local,telnet,ssh,reboot,read,test,winbox,web,api,!ftp,!write,!policy,!password,!sensitive
  }
  :set found 1
}
:if ($found = 0) do={
  :log info "ctwug_global_settings: adding ctwug group"
  add name="ctwug" policy=local,telnet,ssh,reboot,read,test,winbox,web,api,!ftp,!write,!policy,!password,!sensitive
}
:set found 0
/user
:foreach n in [find where name="ctwug"] do={
  :if ([get $n group] != "ctwug") do={
    :log info "ctwug_global_settings: modifying ctwug user"
    set $n group="ctwug"
    set $n password="ctwug"
  }
  :set found 1
}
:if ($found = 0) do={
  :log info "ctwug_global_settings: adding ctwug user"
  add name="ctwug" group="ctwug" password="ctwug"
}
